// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

dependencies {
    // Mockito testing framework (http://code.google.com/p/mockito/):
    testCompile 'org.mockito:mockito-core:1.9.5'
    // Spock testing framework (http://code.google.com/p/spock/):
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

    // TODO: Add dependencies here
    //   but note that JUnit should have already been added in parent.gradle.
    //   By default, only the Maven Central Repository is specified in
    //   parent.gradle.
    //
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
}


sourceSets {
    integrationTest {
        groovy.srcDir 'src/integration/groovy'
//        java.srcDir 'src/integration/java'
        resources.srcDir 'src/integration/resources'
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom integrationTestCompile
}

// Run task with variable:
// $ gradlew cleanTest :example-of-testing-project:iT -PgradleVariable=pl,ru
def gradleVariableValue = hasProperty('gradleVariable') ? gradleVariable : '-'

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    tasks.integrationTest.setGroup('Verification')

    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath += sourceSets.integrationTest.runtimeClasspath

    testLogging.showStandardStreams = true
    environment 'gradleVariable', gradleVariableValue
}
